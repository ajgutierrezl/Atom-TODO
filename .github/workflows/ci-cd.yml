name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm test
      
      - name: Build backend
        run: npm run build
      
      - name: Upload backend build artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/dist
  
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./todo-app
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './todo-app/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless
      
      - name: Build Angular app
        run: npm run build -- --configuration production
      
      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: todo-app/dist

  deploy:
    needs: [test-backend, test-frontend]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download backend build
        uses: actions/download-artifact@v2
        with:
          name: backend-build
          path: backend-dist
      
      - name: Download frontend build
        uses: actions/download-artifact@v2
        with:
          name: frontend-build
          path: frontend-dist
      
      # Setup for Firebase
      - name: Setup Firebase CLI
        run: npm install -g firebase-tools
      
      # Deploy backend (assuming Cloud Functions)
      - name: Deploy Backend to Firebase Functions
        run: firebase deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
      # Deploy frontend (assuming Firebase Hosting)
      - name: Deploy Frontend to Firebase Hosting
        run: firebase deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}